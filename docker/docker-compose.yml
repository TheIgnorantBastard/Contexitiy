version: '3.8'
services:
  neo4j:
    image: neo4j:5.5
    container_name: neo4j
    ports:
      - "7687:7687"
      - "7474:7474"
    environment:
      NEO4J_AUTH: "neo4j/somepassword"
    volumes:
      - neo4j_data:/data
    healthcheck:                          # Add this block
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "somepassword", "MATCH (n) RETURN count(n);"]
      interval: 30s
      retries: 3
      start_period: 10s

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.28.4
    container_name: weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: "25"
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      CLUSTER_HOSTNAME: "node1"
    volumes:
      - weaviate_data:/var/lib/weaviate
    depends_on:
      - neo4j
    healthcheck:                          # Add this block
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      retries: 3
      start_period: 10s

  graph-backend:
    build:
      context: ../apps/graph-backend-python
      dockerfile: ../../docker/Dockerfiles/graph-backend.dockerfile
    container_name: graph-backend
    ports:
      - "8000:8000"
    depends_on:
      neo4j:
        condition: service_healthy
      weaviate:
        condition: service_healthy
    env_file:
      - ../apps/graph-backend-python/.env

  graph-frontend:
    build:
      context: ../apps/graph-frontend-react
      dockerfile: ../../docker/Dockerfiles/graph-frontend.dockerfile
    container_name: graph-frontend
    ports:
      - "5173:5173"
    depends_on:
      graph-backend:
        condition: service_healthy

volumes:
  neo4j_data:
  weaviate_data:
